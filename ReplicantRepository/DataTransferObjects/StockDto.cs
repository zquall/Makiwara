//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace ReplicantRepository.DataTransferObjects
{
    
    [DataContract(Name = "StockDto", Namespace = "http://core.renteco.com/dto/" , IsReference = true) ]
    public partial class StockDto
    {
         #region Primitive Properties
    
    	[DataMember]
        public virtual int ItemId
        {
     
    
            get { return _itemId; }
            set
            {
                if (_itemId != value)
                {
                    if (Item != null && Item.Id != value)
                    {
                        Item = null;
                    }
                    _itemId = value;
                }
            }
        }
        private int _itemId;
    
    	[DataMember]
        public virtual int WarehouseId
        {
     
    
            get { return _warehouseId; }
            set
            {
                if (_warehouseId != value)
                {
                    if (Warehouse != null && Warehouse.Id != value)
                    {
                        Warehouse = null;
                    }
                    _warehouseId = value;
                }
            }
        }
        private int _warehouseId;
    
    	[DataMember]
        public virtual decimal Quantity
        {
            get;
            set;
        }
    
    	[DataMember]
        public virtual int Maximun
        {
            get;
            set;
        }
    
    	[DataMember]
        public virtual int Minimum
        {
            get;
            set;
        }
    	// Custom ToString() Method using reflection
    	// Autor: Jaime Torner
    	public override string ToString() 
    	{		
    		return CustomToStringMethods.ToString(this);
    	}
    

        #endregion
        #region Navigation Properties
    
    	[DataMember]
        public virtual WarehouseDto Warehouse
        {
            get { return _warehouse; }
            set
            {
                if (!ReferenceEquals(_warehouse, value))
                {
                    var previousValue = _warehouse;
                    _warehouse = value;
                    FixupWarehouse(previousValue);
                }
            }
        }
        private WarehouseDto _warehouse;
    
    	[DataMember]
        public virtual ItemDto Item
        {
            get { return _item; }
            set
            {
                if (!ReferenceEquals(_item, value))
                {
                    var previousValue = _item;
                    _item = value;
                    FixupItem(previousValue);
                }
            }
        }
        private ItemDto _item;

        #endregion
        #region Association Fixup
    
        private void FixupWarehouse(WarehouseDto previousValue)
        {
            if (previousValue != null && previousValue.Stocks.Contains(this))
            {
                previousValue.Stocks.Remove(this);
            }
    
            if (Warehouse != null)
            {
                if (!Warehouse.Stocks.Contains(this))
                {
                    Warehouse.Stocks.Add(this);
                }
                if (WarehouseId != Warehouse.Id)
                {
                    WarehouseId = Warehouse.Id;
                }
            }
        }
    
        private void FixupItem(ItemDto previousValue)
        {
            if (previousValue != null && previousValue.Stocks.Contains(this))
            {
                previousValue.Stocks.Remove(this);
            }
    
            if (Item != null)
            {
                if (!Item.Stocks.Contains(this))
                {
                    Item.Stocks.Add(this);
                }
                if (ItemId != Item.Id)
                {
                    ItemId = Item.Id;
                }
            }
        }

        #endregion
    }
}
