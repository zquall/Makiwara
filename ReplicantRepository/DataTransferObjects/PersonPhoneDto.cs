//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace ReplicantRepository.DataTransferObjects
{
    
    [DataContract(Name = "PersonPhoneDto", Namespace = "http://core.renteco.com/dto/" , IsReference = true) ]
    public partial class PersonPhoneDto
    {
         #region Primitive Properties
    
    	[DataMember]
        public virtual int Id
        {
            get;
            set;
        }
    
    	[DataMember]
        public virtual string Phone
        {
            get;
            set;
        }
    
    	[DataMember]
        public virtual int PhoneTypeId
        {
     
    
            get { return _phoneTypeId; }
            set
            {
                if (_phoneTypeId != value)
                {
                    if (PhoneType != null && PhoneType.Id != value)
                    {
                        PhoneType = null;
                    }
                    _phoneTypeId = value;
                }
            }
        }
        private int _phoneTypeId;
    
    	[DataMember]
        public virtual int PersonId
        {
     
    
            get { return _personId; }
            set
            {
                if (_personId != value)
                {
                    if (Person != null && Person.Id != value)
                    {
                        Person = null;
                    }
                    _personId = value;
                }
            }
        }
        private int _personId;
    	// Custom ToString() Method using reflection
    	// Autor: Jaime Torner
    	public override string ToString() 
    	{		
    		return CustomToStringMethods.ToString(this);
    	}
    

        #endregion
        #region Navigation Properties
    
    	[DataMember]
        public virtual ICollection<BudgetRequestDto> BudgetRequests
        {
            get
            {
                if (_budgetRequests == null)
                {
                    var newCollection = new FixupCollection<BudgetRequestDto>();
                    newCollection.CollectionChanged += FixupBudgetRequests;
                    _budgetRequests = newCollection;
                }
                return _budgetRequests;
            }
            set
            {
                if (!ReferenceEquals(_budgetRequests, value))
                {
                    var previousValue = _budgetRequests as FixupCollection<BudgetRequestDto>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBudgetRequests;
                    }
                    _budgetRequests = value;
                    var newValue = value as FixupCollection<BudgetRequestDto>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBudgetRequests;
                    }
                }
            }
        }
        private ICollection<BudgetRequestDto> _budgetRequests;
    
    	[DataMember]
        public virtual PersonDto Person
        {
            get { return _person; }
            set
            {
                if (!ReferenceEquals(_person, value))
                {
                    var previousValue = _person;
                    _person = value;
                    FixupPerson(previousValue);
                }
            }
        }
        private PersonDto _person;
    
    	[DataMember]
        public virtual PhoneTypeDto PhoneType
        {
            get { return _phoneType; }
            set
            {
                if (!ReferenceEquals(_phoneType, value))
                {
                    var previousValue = _phoneType;
                    _phoneType = value;
                    FixupPhoneType(previousValue);
                }
            }
        }
        private PhoneTypeDto _phoneType;

        #endregion
        #region Association Fixup
    
        private void FixupPerson(PersonDto previousValue)
        {
            if (previousValue != null && previousValue.PersonPhones.Contains(this))
            {
                previousValue.PersonPhones.Remove(this);
            }
    
            if (Person != null)
            {
                if (!Person.PersonPhones.Contains(this))
                {
                    Person.PersonPhones.Add(this);
                }
                if (PersonId != Person.Id)
                {
                    PersonId = Person.Id;
                }
            }
        }
    
        private void FixupPhoneType(PhoneTypeDto previousValue)
        {
            if (previousValue != null && previousValue.PersonPhones.Contains(this))
            {
                previousValue.PersonPhones.Remove(this);
            }
    
            if (PhoneType != null)
            {
                if (!PhoneType.PersonPhones.Contains(this))
                {
                    PhoneType.PersonPhones.Add(this);
                }
                if (PhoneTypeId != PhoneType.Id)
                {
                    PhoneTypeId = PhoneType.Id;
                }
            }
        }
    
        private void FixupBudgetRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (BudgetRequestDto item in e.NewItems)
                {
                    item.PersonPhone = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BudgetRequestDto item in e.OldItems)
                {
                    if (ReferenceEquals(item.PersonPhone, this))
                    {
                        item.PersonPhone = null;
                    }
                }
            }
        }

        #endregion
    }
}
